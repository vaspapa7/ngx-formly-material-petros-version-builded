{"version":3,"file":"ngx-formly-material-multicheckbox.js","sources":["ng://@ngx-formly/material/multicheckbox/multicheckbox.type.ts","ng://@ngx-formly/material/multicheckbox/multicheckbox.module.ts","ng://@ngx-formly/material/multicheckbox/ngx-formly-material-multicheckbox.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy, ViewChildren, QueryList } from '@angular/core';\nimport { FieldType } from '@ngx-formly/material/form-field';\nimport { MatCheckbox } from '@angular/material/checkbox';\n\n@Component({\n  selector: 'formly-field-mat-multicheckbox',\n  template: `\n    <ng-container *ngFor=\"let option of to.options | formlySelectOptions: field | async; let i = index\">\n      <mat-checkbox\n        [id]=\"id + '_' + i\"\n        [formlyAttributes]=\"field\"\n        [tabindex]=\"to.tabindex\"\n        [color]=\"to.color\"\n        [labelPosition]=\"to.labelPosition\"\n        [checked]=\"isChecked(option)\"\n        [disabled]=\"formControl.disabled\"\n        (change)=\"onChange(option.value, $event.checked)\"\n      >\n        {{ option.label }}\n      </mat-checkbox>\n    </ng-container>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldMultiCheckbox extends FieldType {\n  @ViewChildren(MatCheckbox) checkboxes!: QueryList<MatCheckbox>;\n\n  defaultOptions = {\n    templateOptions: {\n      hideFieldUnderline: true,\n      floatLabel: 'always',\n      options: [],\n      color: 'accent', // workaround for https://github.com/angular/components/issues/18465\n    },\n  };\n\n  onChange(value: any, checked: boolean) {\n    if (this.to.type === 'array') {\n      this.formControl.patchValue(\n        checked\n          ? [...(this.formControl.value || []), value]\n          : [...(this.formControl.value || [])].filter((o) => o !== value),\n      );\n    } else {\n      this.formControl.patchValue({ ...this.formControl.value, [value]: checked });\n    }\n    this.formControl.markAsTouched();\n  }\n\n  onContainerClick(event: MouseEvent): void {\n    if (this.checkboxes.length) {\n      this.checkboxes.first.focus();\n    }\n    super.onContainerClick(event);\n  }\n\n  isChecked(option: any) {\n    const value = this.formControl.value;\n\n    return value && (this.to.type === 'array' ? value.indexOf(option.value) !== -1 : value[option.value]);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { FormlyFieldMultiCheckbox } from './multicheckbox.type';\n\n@NgModule({\n  declarations: [FormlyFieldMultiCheckbox],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n\n    MatCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'multicheckbox',\n          component: FormlyFieldMultiCheckbox,\n          wrappers: ['form-field'],\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatMultiCheckboxModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":";;;;;;;;;IAwBa,wBAAwB,GAArC,MAAa,wBAAyB,SAAQ,SAAS;IAAvD;;QAGE,mBAAc,GAAG;YACf,eAAe,EAAE;gBACf,kBAAkB,EAAE,IAAI;gBACxB,UAAU,EAAE,QAAQ;gBACpB,OAAO,EAAE,EAAE;gBACX,KAAK,EAAE,QAAQ;aAChB;SACF,CAAC;KA2BH;IAzBC,QAAQ,CAAC,KAAU,EAAE,OAAgB;QACnC,IAAI,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,EAAE;YAC5B,IAAI,CAAC,WAAW,CAAC,UAAU,CACzB,OAAO;kBACH,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,EAAE,KAAK,CAAC;kBAC1C,CAAC,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,IAAI,EAAE,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC,CACnE,CAAC;SACH;aAAM;YACL,IAAI,CAAC,WAAW,CAAC,UAAU,iCAAM,IAAI,CAAC,WAAW,CAAC,KAAK,KAAE,CAAC,KAAK,GAAG,OAAO,IAAG,CAAC;SAC9E;QACD,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,CAAC;KAClC;IAED,gBAAgB,CAAC,KAAiB;QAChC,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,EAAE;YAC1B,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,KAAK,EAAE,CAAC;SAC/B;QACD,KAAK,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;KAC/B;IAED,SAAS,CAAC,MAAW;QACnB,MAAM,KAAK,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;QAErC,OAAO,KAAK,KAAK,IAAI,CAAC,EAAE,CAAC,IAAI,KAAK,OAAO,GAAG,KAAK,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;KACvG;EACF;AApC4B;IAA1B,YAAY,CAAC,WAAW,CAAC;8BAAc,SAAS;4DAAc;AADpD,wBAAwB;IApBpC,SAAS,CAAC;QACT,QAAQ,EAAE,gCAAgC;QAC1C,QAAQ,EAAE;;;;;;;;;;;;;;;GAeT;QACD,eAAe,EAAE,uBAAuB,CAAC,MAAM;KAChD,CAAC;GACW,wBAAwB,CAqCpC;;IC9BY,4BAA4B,GAAzC,MAAa,4BAA4B;EAAG;AAA/B,4BAA4B;IArBxC,QAAQ,CAAC;QACR,YAAY,EAAE,CAAC,wBAAwB,CAAC;QACxC,OAAO,EAAE;YACP,YAAY;YACZ,mBAAmB;YAEnB,iBAAiB;YAEjB,wBAAwB;YACxB,kBAAkB;YAClB,YAAY,CAAC,QAAQ,CAAC;gBACpB,KAAK,EAAE;oBACL;wBACE,IAAI,EAAE,eAAe;wBACrB,SAAS,EAAE,wBAAwB;wBACnC,QAAQ,EAAE,CAAC,YAAY,CAAC;qBACzB;iBACF;aACF,CAAC;SACH;KACF,CAAC;GACW,4BAA4B,CAAG;;AC/B5C;;;;;;"}