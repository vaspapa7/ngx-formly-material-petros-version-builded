{"version":3,"file":"ngx-formly-material-select.js","sources":["ng://@ngx-formly/material/select/select.type.ts","ng://@ngx-formly/material/select/select.module.ts","ng://@ngx-formly/material/select/ngx-formly-material-select.ts"],"sourcesContent":["import { Component, ChangeDetectionStrategy, ViewChild } from '@angular/core';\nimport { MatSelect, MatSelectChange } from '@angular/material/select';\nimport { FieldType } from '@ngx-formly/material/form-field';\n\n@Component({\n  selector: 'formly-field-mat-select',\n  template: `\n    <ng-template #selectAll let-selectOptions=\"selectOptions\">\n      <mat-option (click)=\"toggleSelectAll(selectOptions)\">\n        <mat-pseudo-checkbox class=\"mat-option-pseudo-checkbox\" [state]=\"getSelectAllState(selectOptions)\">\n        </mat-pseudo-checkbox>\n        {{ to.selectAllOption }}\n      </mat-option>\n    </ng-template>\n\n    <mat-select\n      [id]=\"id\"\n      [formControl]=\"formControl\"\n      [formlyAttributes]=\"field\"\n      [placeholder]=\"to.placeholder\"\n      [tabindex]=\"to.tabindex\"\n      [required]=\"to.required\"\n      [compareWith]=\"to.compareWith\"\n      [multiple]=\"to.multiple\"\n      (selectionChange)=\"change($event)\"\n      [errorStateMatcher]=\"errorStateMatcher\"\n      [aria-labelledby]=\"_getAriaLabelledby()\"\n      [disableOptionCentering]=\"to.disableOptionCentering\"\n    >\n      <ng-container *ngIf=\"to.options | formlySelectOptions: field | async as selectOptions\">\n        <ng-container\n          *ngIf=\"to.multiple && to.selectAllOption\"\n          [ngTemplateOutlet]=\"selectAll\"\n          [ngTemplateOutletContext]=\"{ selectOptions: selectOptions }\"\n        >\n        </ng-container>\n        <ng-container *ngFor=\"let item of selectOptions\">\n          <mat-optgroup *ngIf=\"item.group\" [label]=\"item.label\">\n            <mat-option *ngFor=\"let child of item.group\" [value]=\"child.value\" [disabled]=\"child.disabled\">\n              {{ child.label }}\n            </mat-option>\n          </mat-optgroup>\n          <mat-option *ngIf=\"!item.group\" [value]=\"item.value\" [disabled]=\"item.disabled\">{{ item.label }}</mat-option>\n        </ng-container>\n      </ng-container>\n    </mat-select>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyFieldSelect extends FieldType {\n  @ViewChild(MatSelect, { static: true }) formFieldControl!: MatSelect;\n\n  defaultOptions = {\n    templateOptions: {\n      options: [],\n      compareWith(o1: any, o2: any) {\n        return o1 === o2;\n      },\n    },\n  };\n\n  private selectAllValue!: { options: any; value: any[] };\n\n  getSelectAllState(options: any[]) {\n    if (this.empty || this.value.length === 0) {\n      return '';\n    }\n\n    return this.value.length !== this.getSelectAllValue(options).length ? 'indeterminate' : 'checked';\n  }\n\n  toggleSelectAll(options: any[]) {\n    const selectAllValue = this.getSelectAllValue(options);\n    this.formControl.setValue(!this.value || this.value.length !== selectAllValue.length ? selectAllValue : []);\n  }\n\n  change($event: MatSelectChange) {\n    if (this.to.change) {\n      this.to.change(this.field, $event);\n    }\n  }\n\n  _getAriaLabelledby() {\n    if (this.to.attributes && this.to.attributes['aria-labelledby']) {\n      return this.to.attributes['aria-labelledby'];\n    }\n\n    if (this.formField && this.formField._labelId) {\n      return this.formField._labelId;\n    }\n\n    return null;\n  }\n\n  private getSelectAllValue(options: any[]) {\n    if (!this.selectAllValue || options !== this.selectAllValue.options) {\n      const flatOptions: any[] = [];\n      options.forEach((o) => (o.group ? flatOptions.push(...o.group) : flatOptions.push(o)));\n\n      this.selectAllValue = {\n        options,\n        value: flatOptions.map((o) => o.value),\n      };\n    }\n\n    return this.selectAllValue.value;\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { FormlySelectModule } from '@ngx-formly/core/select';\n\nimport { FormlyMatFormFieldModule } from '@ngx-formly/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { FormlyFieldSelect } from './select.type';\nimport { MatPseudoCheckboxModule } from '@angular/material/core';\n\n@NgModule({\n  declarations: [FormlyFieldSelect],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatSelectModule,\n    MatPseudoCheckboxModule,\n\n    FormlyMatFormFieldModule,\n    FormlySelectModule,\n    FormlyModule.forChild({\n      types: [\n        {\n          name: 'select',\n          component: FormlyFieldSelect,\n          wrappers: ['form-field'],\n        },\n        { name: 'enum', extends: 'select' },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatSelectModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":[],"mappings":"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"}