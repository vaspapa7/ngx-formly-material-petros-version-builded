{"version":3,"file":"ngx-formly-material-form-field.js","sources":["ng://@ngx-formly/material/form-field/form-field.wrapper.ts","ng://@ngx-formly/material/form-field/form-field.module.ts","ng://@ngx-formly/material/form-field/field.type.ts","ng://@ngx-formly/material/form-field/ngx-formly-material-form-field.ts"],"sourcesContent":["import {\n  Component,\n  ChangeDetectionStrategy,\n  ViewChild,\n  OnInit,\n  OnDestroy,\n  Renderer2,\n  AfterViewInit,\n  AfterContentChecked,\n  TemplateRef,\n  ElementRef,\n  ViewContainerRef,\n} from '@angular/core';\nimport {\n  ɵdefineHiddenProp as defineHiddenProp,\n  ɵobserve as observe,\n  FormlyFieldConfig,\n  FieldWrapper,\n} from '@ngx-formly/core';\nimport { MatFormField } from '@angular/material/form-field';\nimport { FocusMonitor } from '@angular/cdk/a11y';\n\ninterface MatFormlyFieldConfig extends FormlyFieldConfig {\n  _matprefix: TemplateRef<any>;\n  _matsuffix: TemplateRef<any>;\n  __formField__: FormlyWrapperFormField;\n}\n\n@Component({\n  selector: 'formly-wrapper-mat-form-field',\n  template: `\n    <!-- fix https://github.com/angular/material2/pull/7083 by setting width to 100% -->\n    <mat-form-field\n      [hideRequiredMarker]=\"true\"\n      [floatLabel]=\"to.floatLabel\"\n      [appearance]=\"to.appearance\"\n      [color]=\"to.color\"\n      [style.width]=\"'100%'\"\n    >\n      <ng-container #fieldComponent></ng-container>\n      <mat-label *ngIf=\"to.label && to.hideLabel !== true\">\n        {{ to.label }}\n        <span *ngIf=\"to.required && to.hideRequiredMarker !== true\" class=\"mat-form-field-required-marker\">*</span>\n      </mat-label>\n\n      <ng-container matPrefix>\n        <ng-container *ngTemplateOutlet=\"field._matprefix\"></ng-container>\n      </ng-container>\n\n      <ng-container matSuffix>\n        <ng-container *ngTemplateOutlet=\"field._matsuffix\"></ng-container>\n      </ng-container>\n\n      <!-- fix https://github.com/angular/material2/issues/7737 by setting id to null  -->\n      <mat-error [id]=\"null\">\n        <formly-validation-message [field]=\"field\"></formly-validation-message>\n      </mat-error>\n      <!-- fix https://github.com/angular/material2/issues/7737 by setting id to null  -->\n      <mat-hint *ngIf=\"to.description\" [id]=\"null\">{{ to.description }}</mat-hint>\n    </mat-form-field>\n  `,\n  changeDetection: ChangeDetectionStrategy.OnPush,\n})\nexport class FormlyWrapperFormField extends FieldWrapper<MatFormlyFieldConfig>\n  implements OnInit, OnDestroy, AfterViewInit, AfterContentChecked {\n  @ViewChild('fieldComponent', { read: ViewContainerRef, static: true }) fieldComponent!: ViewContainerRef;\n  @ViewChild(MatFormField, { static: true }) formField!: MatFormField;\n  field!: MatFormlyFieldConfig;\n\n  private initialGapCalculated = false;\n\n  constructor(private renderer: Renderer2, private elementRef: ElementRef, private focusMonitor: FocusMonitor) {\n    super();\n  }\n\n  ngOnInit() {\n    defineHiddenProp(this.field, '__formField__', this.formField);\n    ['prefix', 'suffix'].forEach((type) =>\n      observe<TemplateRef<any>>(\n        this.field,\n        ['templateOptions', type],\n        ({ currentValue }) =>\n          currentValue &&\n          Promise.resolve().then(() => {\n            (<any>this.field)[`_mat${type}`] = currentValue;\n            this.options.detectChanges!(this.field);\n          }),\n      ),\n    );\n\n    // fix for https://github.com/angular/material2/issues/11437\n    if (this.field.hide && this.field.templateOptions!.appearance === 'outline') {\n      this.initialGapCalculated = true;\n    }\n\n    this.focusMonitor.monitor(this.elementRef, true).subscribe((origin) => {\n      if (!origin && this.field.focus) {\n        this.field.focus = false;\n      }\n    });\n  }\n\n  ngAfterContentChecked() {\n    if (!this.initialGapCalculated || this.field.hide) {\n      return;\n    }\n\n    this.formField.updateOutlineGap();\n    this.initialGapCalculated = true;\n  }\n\n  ngAfterViewInit() {\n    // temporary fix for https://github.com/angular/material2/issues/7891\n    if (this.formField.appearance !== 'outline' && this.to.hideFieldUnderline === true) {\n      const underlineElement = this.formField._elementRef.nativeElement.querySelector('.mat-form-field-underline');\n      underlineElement && this.renderer.removeChild(underlineElement.parentNode, underlineElement);\n    }\n  }\n\n  ngOnDestroy() {\n    delete this.field.__formField__;\n    this.focusMonitor.stopMonitoring(this.elementRef);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormlyModule } from '@ngx-formly/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { FormlyWrapperFormField } from './form-field.wrapper';\n\n@NgModule({\n  declarations: [FormlyWrapperFormField],\n  imports: [\n    CommonModule,\n    ReactiveFormsModule,\n    MatFormFieldModule,\n    FormlyModule.forChild({\n      wrappers: [\n        {\n          name: 'form-field',\n          component: FormlyWrapperFormField,\n        },\n      ],\n    }),\n  ],\n})\nexport class FormlyMatFormFieldModule {}\n","import { OnInit, OnDestroy, AfterViewInit, TemplateRef, ViewChild, Type, Directive } from '@angular/core';\nimport { FieldType as CoreFieldType, FormlyFieldConfig } from '@ngx-formly/core';\nimport { Subject } from 'rxjs';\nimport { MatFormField, MatFormFieldControl } from '@angular/material/form-field';\nimport { ErrorStateMatcher } from '@angular/material/core';\n\n@Directive()\nexport abstract class FieldType<F extends FormlyFieldConfig = FormlyFieldConfig> extends CoreFieldType<F>\n  implements OnInit, AfterViewInit, OnDestroy, MatFormFieldControl<any> {\n  @ViewChild('matPrefix') matPrefix!: TemplateRef<any>;\n  @ViewChild('matSuffix') matSuffix!: TemplateRef<any>;\n\n  get formFieldControl() {\n    return this._control || this;\n  }\n  set formFieldControl(control: MatFormFieldControl<any>) {\n    this._control = control;\n    if (this.formField && control !== this.formField._control) {\n      this.formField._control = control;\n    }\n  }\n\n  errorStateMatcher: ErrorStateMatcher = { isErrorState: () => this.field && this.showError };\n  stateChanges = new Subject<void>();\n  _errorState = false;\n  private _control!: MatFormFieldControl<any>;\n\n  ngOnInit() {\n    if (this.formField) {\n      this.formField._control = this.formFieldControl;\n    }\n  }\n\n  ngAfterViewInit() {\n    if (this.matPrefix) {\n      this.to.prefix = this.matPrefix;\n    }\n    if (this.matSuffix) {\n      this.to.prefix = this.matSuffix;\n    }\n  }\n\n  ngOnDestroy() {\n    if (this.formField) {\n      delete this.formField._control;\n    }\n    this.stateChanges.complete();\n  }\n\n  setDescribedByIds(ids: string[]): void {}\n  onContainerClick(event: MouseEvent): void {\n    this.field.focus = true;\n    this.stateChanges.next();\n  }\n\n  get errorState() {\n    const showError = this.options!.showError!(this);\n    if (showError !== this._errorState) {\n      this._errorState = showError;\n      this.stateChanges.next();\n    }\n\n    return showError;\n  }\n\n  get controlType() {\n    if (this.to.type) {\n      return this.to.type;\n    }\n\n    if (<any>this.field.type instanceof Type) {\n      return this.field.type!.constructor.name;\n    }\n\n    return this.field.type!;\n  }\n  get focused() {\n    return !!this.field.focus && !this.disabled;\n  }\n  get disabled() {\n    return !!this.to.disabled;\n  }\n  get required() {\n    return !!this.to.required;\n  }\n  get placeholder() {\n    return this.to.placeholder || '';\n  }\n  get shouldPlaceholderFloat() {\n    return this.shouldLabelFloat;\n  }\n  get value() {\n    return this.formControl.value;\n  }\n  set value(value) {\n    this.formControl.patchValue(value);\n  }\n  get ngControl() {\n    return this.formControl as any;\n  }\n  get empty() {\n    return this.value == null || this.value === '';\n  }\n  get shouldLabelFloat() {\n    return this.focused || !this.empty;\n  }\n  get formField(): MatFormField {\n    return this.field ? (<any>this.field)['__formField__'] : null;\n  }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {FormlyWrapperFormField as ɵa} from './form-field.wrapper';"],"names":["defineHiddenProp","observe","CoreFieldType"],"mappings":"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"}